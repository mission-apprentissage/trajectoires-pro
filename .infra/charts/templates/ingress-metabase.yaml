{{- if .Values.metabase.enable -}}
{{- if .Values.ingress.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "app.fullname" . }}-metabase-ingress
  labels:
    {{- include "app.labels" . | nindent 4 }}
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "36000"  # 10 heures
    nginx.ingress.kubernetes.io/send-timeout: "300"

    nginx.ingress.kubernetes.io/custom-headers: "{{ .Release.Namespace }}/{{ include "app.fullname" . }}-custom-headers"
    {{- if .Values.ingress.annotations }}
    {{- toYaml .Values.ingress.annotations | nindent 4 }}
    {{- end }}
spec:
  ingressClassName: nginx
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        - {{ printf "api.%s" . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          # Metabase
          - path: /metabase(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ include "app.fullname" $ }}-metabase
                port:
                  number: {{ $.Values.metabase.service.port }}
    {{- end }}
{{- end }}
{{- end }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "app.fullname" . }}-migration
  labels:
    {{- include "app.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ include "app.fullname" . }}-migration
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
      - name: migration
        image: "{{ .Values.image.repository }}-server:{{ .Values.image.tag }}"
        command: ["yarn", "migrate-mongo", "up"]
        {{- if .Values.server.env }}
        {{- $hasConfig := and .Values.server.env.config (kindIs "map" .Values.server.env.config) (gt (len .Values.server.env.config) 0) }}
        {{- $hasSecrets := and .Values.server.env.secrets (kindIs "map" .Values.server.env.secrets) (gt (len .Values.server.env.secrets) 0) }}
        {{- if or $hasConfig $hasSecrets }}
        envFrom:
          {{- if $hasConfig }}
          - configMapRef:
              name: {{ include "app.fullname" . }}-server-config
          {{- end }}
          {{- if $hasSecrets }}
          - secretRef:
              name: {{ include "app.fullname" . }}-server-secret
          {{- end }}
        {{- end }}
        {{- end }}

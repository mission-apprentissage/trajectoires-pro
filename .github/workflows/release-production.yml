name: Release version production
on:
  push:
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v6
        with:
          node-version: 24.10.0
      - uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Run yarn Install
        run: yarn install

      - name: bump
        run: yarn npm:release
        env:
          HUSKY: 0
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ vars.SLACK_CHANNEL }}
  # back-merge:
  #   needs: release
  #   if: "startsWith(github.event.head_commit.message, 'chore(release')"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master

  #     - name: Merge main -> develop
  #       uses: devmasx/merge-branch@v1.3.1
  #       with:
  #         type: now
  #         from_branch: main
  #         target_branch: develop
  #         github_token: ${{ secrets.GH_TOKEN }}
  ciserver:
    needs: release
    if: "!startsWith(github.event.head_commit.message, 'chore(release')"
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - uses: actions/setup-node@v6
        with:
          node-version: 24.10.0

      - uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Cache MongoDB binaries
        uses: actions/cache@v3
        with:
          path: ~/.cache/mongodb-binaries
          key: ${{ runner.os }}-mongodb
      
      - name: Download MongoDB Binary
        run: |
          mkdir -p ~/.cache/mongodb-binaries/mongodb-linux-x86_64-ubuntu2404-8.0.15
          wget -q https://downloads.mongodb.org/linux/mongodb-linux-x86_64-ubuntu2404-8.0.15.tgz -O /tmp/mongodb.tgz
          tar -xzf /tmp/mongodb.tgz -C ~/.cache/mongodb-binaries/mongodb-linux-x86_64-ubuntu2404-8.0.15 --strip-components=1
          ls -la ~/.cache/mongodb-binaries/mongodb-linux-x86_64-ubuntu2404-8.0.15/bin/mongod
   
      # Install dependencies
      - name: Run yarn Install
        run: yarn install

      # Install yarn dependencies
      - name: Run yarn Install server
        run: yarn --cwd server install --frozen-lockfile
        env:
          MONGOMS_DOWNLOAD_URL: https://downloads.mongodb.org/linux/mongodb-linux-x86_64-ubuntu2404-8.0.15.tgz

      
      # Lint
      - name: Run Lint
        run: yarn --cwd server lint

      # Run mocha tests
      - name: Run Tests
        run: |
          yarn --cwd server test
        env:
          # Using mongodb binary download manualy (the download fails when using mongodb-memory-server auto download)
          MONGOMS_SYSTEM_BINARY: /home/runner/.cache/mongodb-binaries/mongodb-linux-x86_64-ubuntu2404-8.0.15/bin/mongod


      # codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./server/coverage
          name: codecov-server
          verbose: true